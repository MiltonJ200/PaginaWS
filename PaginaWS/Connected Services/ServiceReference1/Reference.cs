// ------------------------------------------------------------------------------
// <auto-generated>
// Este código fue generado por una herramienta.
// Versión de runtime:4.0.30319.42000
// 
// Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
// se vuelve a generar el código.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;

namespace PaginaWS.ServiceReference1
{
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContract(ConfigurationName = "ServiceReference1.WebService1Soap")]
    public interface WebService1Soap
    {

        // CODEGEN: Se está generando un contrato de mensaje, ya que el nombre de elemento HelloWorldResult del espacio de nombres http://tempuri.org/ no está marcado para aceptar valores nil.
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/HelloWorld", ReplyAction = "*")]
        HelloWorldResponse HelloWorld(HelloWorldRequest request);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/HelloWorld", ReplyAction = "*")]
        System.Threading.Tasks.Task<HelloWorldResponse> HelloWorldAsync(HelloWorldRequest request);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Hora", ReplyAction = "*")]
        DateTime Hora();
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Hora", ReplyAction = "*")]
        System.Threading.Tasks.Task<DateTime> HoraAsync();
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Sumar", ReplyAction = "*")]
        long Sumar(int a, int b);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Sumar", ReplyAction = "*")]
        System.Threading.Tasks.Task<long> SumarAsync(int a, int b);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Restar", ReplyAction = "*")]
        long Restar(int a, int b);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Restar", ReplyAction = "*")]
        System.Threading.Tasks.Task<long> RestarAsync(int a, int b);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Multiplicar", ReplyAction = "*")]
        long Multiplicar(int a, int b);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Multiplicar", ReplyAction = "*")]
        System.Threading.Tasks.Task<long> MultiplicarAsync(int a, int b);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Dividir", ReplyAction = "*")]
        double Dividir(double a, double b);
        [System.ServiceModel.OperationContract(Action = "http://tempuri.org/Dividir", ReplyAction = "*")]
        System.Threading.Tasks.Task<double> DividirAsync(double a, double b);
    }

    [DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(IsWrapped = false)]
    public partial class HelloWorldRequest
    {
        [System.ServiceModel.MessageBodyMember(Name = "HelloWorld", Namespace = "http://tempuri.org/", Order = 0)]
        public HelloWorldRequestBody Body;

        public HelloWorldRequest() : base()
        {
        }

        public HelloWorldRequest(HelloWorldRequestBody Body) : base()
        {
            this.Body = Body;
        }
    }

    [DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContract()]
    public partial class HelloWorldRequestBody
    {
        public HelloWorldRequestBody() : base()
        {
        }
    }

    [DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(IsWrapped = false)]
    public partial class HelloWorldResponse
    {
        [System.ServiceModel.MessageBodyMember(Name = "HelloWorldResponse", Namespace = "http://tempuri.org/", Order = 0)]
        public HelloWorldResponseBody Body;

        public HelloWorldResponse() : base()
        {
        }

        public HelloWorldResponse(HelloWorldResponseBody Body) : base()
        {
            this.Body = Body;
        }
    }

    [DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContract(Namespace = "http://tempuri.org/")]
    public partial class HelloWorldResponseBody
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Order = 0)]
        public string HelloWorldResult;

        public HelloWorldResponseBody() : base()
        {
        }

        public HelloWorldResponseBody(string HelloWorldResult) : base()
        {
            this.HelloWorldResult = HelloWorldResult;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : WebService1Soap, System.ServiceModel.IClientChannel
    {
    }

    [DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<WebService1Soap>, WebService1Soap
    {
        public WebService1SoapClient() : base()
        {
        }

        public WebService1SoapClient(string endpointConfigurationName) : base(endpointConfigurationName)
        {
        }

        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : base(endpointConfigurationName, remoteAddress)
        {
        }

        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : base(endpointConfigurationName, remoteAddress)
        {
        }

        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : base(binding, remoteAddress)
        {
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        HelloWorldResponse WebService1Soap.HelloWorld(HelloWorldRequest request)
        {
            return Channel.HelloWorld(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HelloWorldResponse ServiceReference1_WebService1Soap_HelloWorld(HelloWorldRequest request) => ((WebService1Soap)this).HelloWorld(request);

        public string HelloWorld()
        {
            var inValue = new HelloWorldRequest();
            inValue.Body = new HelloWorldRequestBody();
            var retVal = ((WebService1Soap)this).HelloWorld(inValue);
            return retVal.Body.HelloWorldResult;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HelloWorldResponse> WebService1Soap.HelloWorldAsync(HelloWorldRequest request)
        {
            return Channel.HelloWorldAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<HelloWorldResponse> ServiceReference1_WebService1Soap_HelloWorldAsync(HelloWorldRequest request) => ((WebService1Soap)this).HelloWorldAsync(request);

        public System.Threading.Tasks.Task<HelloWorldResponse> HelloWorldAsync()
        {
            var inValue = new HelloWorldRequest();
            inValue.Body = new HelloWorldRequestBody();
            return ((WebService1Soap)this).HelloWorldAsync(inValue);
        }

        public DateTime Hora()
        {
            return Channel.Hora();
        }

        public System.Threading.Tasks.Task<DateTime> HoraAsync()
        {
            return Channel.HoraAsync();
        }

        public long Sumar(int a, int b)
        {
            return Channel.Sumar(a, b);
        }

        public System.Threading.Tasks.Task<long> SumarAsync(int a, int b)
        {
            return Channel.SumarAsync(a, b);
        }

        public long Restar(int a, int b)
        {
            return Channel.Restar(a, b);
        }

        public System.Threading.Tasks.Task<long> RestarAsync(int a, int b)
        {
            return Channel.RestarAsync(a, b);
        }

        public long Multiplicar(int a, int b)
        {
            return Channel.Multiplicar(a, b);
        }

        public System.Threading.Tasks.Task<long> MultiplicarAsync(int a, int b)
        {
            return Channel.MultiplicarAsync(a, b);
        }

        public double Dividir(double a, double b)
        {
            return Channel.Dividir(a, b);
        }

        public System.Threading.Tasks.Task<double> DividirAsync(double a, double b)
        {
            return Channel.DividirAsync(a, b);
        }
    }
}